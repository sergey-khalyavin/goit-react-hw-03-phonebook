{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleSubmit","e","preventDefault","props","onAddContact","setState","handleChange","target","value","onSubmit","this","className","styles","form","label","input","type","onChange","Component","ContactListItem","id","onRemove","item","section__btn","onClick","ContactList","contacts","onRemoveContact","map","prop","Filter","onChangeFilter","App","filter","addContact","contact","uuidv4","toLowerCase","includes","trim","alert","prevState","removeContact","contactId","changeFilter","getVisibleContacts","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","box","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cb45836.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2F9tg\",\"section__btn\":\"ContactListItem_section__btn__3YUat\",\"contact\":\"ContactListItem_contact__WljtC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__2eRrJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__686zo\",\"label\":\"ContactForm_label__38xv2\",\"input\":\"ContactForm_input__BBqVS\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onAddContact(name, number);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"number\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, id, number, onRemove }) => {\r\n  return (\r\n    <li key={id} className={styles.item}>\r\n      <p>{name}:</p>\r\n      <p>{number}</p>\r\n      <section className={styles.section__btn}>\r\n        <button type=\"button\" onClick={onRemove}>\r\n          Delete\r\n        </button>\r\n      </section>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, ...prop }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        {...prop}\r\n        onRemove={() => onRemoveContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nimport styles from \"./App.module.css\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    name: \"\",\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const persistedContacts = localStorage.getItem(\"contacts\");\r\n    if (persistedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(persistedContacts),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (name, number) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const names = this.state.contacts.map((contact) =>\r\n      contact.name.toLowerCase()\r\n    );\r\n\r\n    if (names.includes(contact.name.toLowerCase().trim())) {\r\n      alert(`${contact.name} is already in contacts`);\r\n    } else {\r\n      this.setState((prevState) => {\r\n        return {\r\n          contacts: [...prevState.contacts, contact],\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  removeContact = (contactId) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <div className={styles.box}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onAddContact={this.addContact} />\r\n\r\n        {contacts.length > 0 && (\r\n          <>\r\n            <h2>Contacts</h2>\r\n\r\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n          </>\r\n        )}\r\n\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onRemoveContact={this.removeContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './base.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}